{"ast":null,"code":"var _jsxFileName = \"D:\\\\1react_project\\\\react_projs\\\\dep_portfolio\\\\dep_profile\\\\src\\\\components\\\\btnDarkMod\\\\BtnDarkMod.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\nimport { useLocalStorage } from \"../../utils/useLocalStorage\";\nimport detectDarkMode from \"../../utils/detectDarkMode\";\nimport sun from \"../../img/icons/sun.svg\";\nimport moon from \"../../img/icons/moon.svg\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BtnDarkMod = () => {\n  _s();\n  const [darkMode, setDarkMode] = useLocalStorage('darkMode', detectDarkMode());\n  const btnRef = useRef(null);\n  useEffect(() => {\n    if (darkMode === \"dark\") {\n      document.body.classList.add('dark');\n      btnRef.current.classList.add('dark-mode-btn--active');\n    } else {\n      document.body.classList.remove('dark');\n      btnRef.current.classList.remove('dark-mode-btn--active');\n    }\n  }, [darkMode]);\n  useEffect(() => {\n    window.matchMedia(\"(prefers-color-scheme: dark)\").addEventListener(\"change\", event => {\n      const newColorScheme = event.matches ? \"dark\" : \"light\";\n      setDarkMode(newColorScheme);\n    });\n  }, [setDarkMode]);\n  const toggleDarkMod = () => {\n    setDarkMode(current => {\n      return current === \"light\" ? \"dark\" : \"light\";\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    ref: btnRef,\n    className: \"dark-mode-btn\",\n    onClick: toggleDarkMod,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: sun,\n      alt: \"Light mode\",\n      className: \"dark-mode-btn__icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: moon,\n      alt: \"Dark mode\",\n      className: \"dark-mode-btn__icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(BtnDarkMod, \"AV2cBCCexjqAGU6Ic3MrbiX3aXk=\", false, function () {\n  return [useLocalStorage];\n});\n_c = BtnDarkMod;\nexport default BtnDarkMod;\nvar _c;\n$RefreshReg$(_c, \"BtnDarkMod\");","map":{"version":3,"names":["useEffect","useRef","useLocalStorage","detectDarkMode","sun","moon","jsxDEV","_jsxDEV","BtnDarkMod","_s","darkMode","setDarkMode","btnRef","document","body","classList","add","current","remove","window","matchMedia","addEventListener","event","newColorScheme","matches","toggleDarkMod","ref","className","onClick","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/1react_project/react_projs/dep_portfolio/dep_profile/src/components/btnDarkMod/BtnDarkMod.js"],"sourcesContent":["import { useEffect, useRef } from \"react\";\r\n\r\nimport { useLocalStorage } from \"../../utils/useLocalStorage\";\r\n\r\nimport detectDarkMode from \"../../utils/detectDarkMode\";\r\nimport sun from \"../../img/icons/sun.svg\";\r\nimport moon from \"../../img/icons/moon.svg\";\r\nimport \"./style.css\"\r\n\r\n\r\nconst BtnDarkMod = () => {\r\n\r\n    const [darkMode, setDarkMode] = useLocalStorage('darkMode', detectDarkMode());\r\n\r\n    const btnRef = useRef (null);\r\n\r\n    useEffect(() => {\r\n        if (darkMode === \"dark\") {\r\n            document.body.classList.add('dark');\r\n            btnRef.current.classList.add('dark-mode-btn--active');\r\n        } else {\r\n            document.body.classList.remove('dark');\r\n            btnRef.current.classList.remove('dark-mode-btn--active');\r\n        }\r\n    }, [darkMode])\r\n\r\n    useEffect(() => {\r\n        window\r\n            .matchMedia(\"(prefers-color-scheme: dark)\")\r\n            .addEventListener(\"change\", (event) => {\r\n                const newColorScheme = event.matches ? \"dark\" : \"light\";\r\n                setDarkMode(newColorScheme);\r\n            });\r\n    }, [setDarkMode])\r\n\r\n    const toggleDarkMod = () => {\r\n        setDarkMode((current) => {\r\n            return current === \"light\" ? \"dark\" : \"light\";\r\n        });\r\n    }\r\n\r\n    return ( \r\n        <button ref={btnRef} className=\"dark-mode-btn\" onClick={toggleDarkMod}>\r\n            <img src={sun} alt=\"Light mode\" className=\"dark-mode-btn__icon\" />\r\n            <img src={moon} alt=\"Dark mode\" className=\"dark-mode-btn__icon\" />\r\n        </button>\r\n     );\r\n}\r\n \r\nexport default BtnDarkMod;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAEzC,SAASC,eAAe,QAAQ,6BAA6B;AAE7D,OAAOC,cAAc,MAAM,4BAA4B;AACvD,OAAOC,GAAG,MAAM,yBAAyB;AACzC,OAAOC,IAAI,MAAM,0BAA0B;AAC3C,OAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGpB,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAErB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,eAAe,CAAC,UAAU,EAAEC,cAAc,CAAC,CAAC,CAAC;EAE7E,MAAMS,MAAM,GAAGX,MAAM,CAAE,IAAI,CAAC;EAE5BD,SAAS,CAAC,MAAM;IACZ,IAAIU,QAAQ,KAAK,MAAM,EAAE;MACrBG,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;MACnCJ,MAAM,CAACK,OAAO,CAACF,SAAS,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACzD,CAAC,MAAM;MACHH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACG,MAAM,CAAC,MAAM,CAAC;MACtCN,MAAM,CAACK,OAAO,CAACF,SAAS,CAACG,MAAM,CAAC,uBAAuB,CAAC;IAC5D;EACJ,CAAC,EAAE,CAACR,QAAQ,CAAC,CAAC;EAEdV,SAAS,CAAC,MAAM;IACZmB,MAAM,CACDC,UAAU,CAAC,8BAA8B,CAAC,CAC1CC,gBAAgB,CAAC,QAAQ,EAAGC,KAAK,IAAK;MACnC,MAAMC,cAAc,GAAGD,KAAK,CAACE,OAAO,GAAG,MAAM,GAAG,OAAO;MACvDb,WAAW,CAACY,cAAc,CAAC;IAC/B,CAAC,CAAC;EACV,CAAC,EAAE,CAACZ,WAAW,CAAC,CAAC;EAEjB,MAAMc,aAAa,GAAGA,CAAA,KAAM;IACxBd,WAAW,CAAEM,OAAO,IAAK;MACrB,OAAOA,OAAO,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;IACjD,CAAC,CAAC;EACN,CAAC;EAED,oBACIV,OAAA;IAAQmB,GAAG,EAAEd,MAAO;IAACe,SAAS,EAAC,eAAe;IAACC,OAAO,EAAEH,aAAc;IAAAI,QAAA,gBAClEtB,OAAA;MAAKuB,GAAG,EAAE1B,GAAI;MAAC2B,GAAG,EAAC,YAAY;MAACJ,SAAS,EAAC;IAAqB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClE5B,OAAA;MAAKuB,GAAG,EAAEzB,IAAK;MAAC0B,GAAG,EAAC,WAAW;MAACJ,SAAS,EAAC;IAAqB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC;AAEjB,CAAC;AAAA1B,EAAA,CArCKD,UAAU;EAAA,QAEoBN,eAAe;AAAA;AAAAkC,EAAA,GAF7C5B,UAAU;AAuChB,eAAeA,UAAU;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}