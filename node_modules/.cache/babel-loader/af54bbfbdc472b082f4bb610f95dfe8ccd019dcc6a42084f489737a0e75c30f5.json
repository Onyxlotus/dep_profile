{"ast":null,"code":"import{useEffect,useRef}from\"react\";import{useLocalStorage}from\"../../utils/useLocalStorage\";import detectDarkMode from\"../../utils/detectDarkMode\";import sun from\"../../img/icons/sun.svg\";import moon from\"../../img/icons/moon.svg\";import\"./style.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const BtnDarkMod=()=>{const[darkMode,setDarkMode]=useLocalStorage('darkMode',detectDarkMode());const btnRef=useRef(null);useEffect(()=>{if(darkMode===\"dark\"){document.body.classList.add('dark');btnRef.current.classList.add('dark-mode-btn--active');}else{document.body.classList.remove('dark');btnRef.current.classList.remove('dark-mode-btn--active');}},[darkMode]);useEffect(()=>{window.matchMedia(\"(prefers-color-scheme: dark)\").addEventListener(\"change\",event=>{const newColorScheme=event.matches?\"dark\":\"light\";setDarkMode(newColorScheme);});},[setDarkMode]);const toggleDarkMod=()=>{setDarkMode(current=>{return current===\"light\"?\"dark\":\"light\";});};return/*#__PURE__*/_jsxs(\"button\",{ref:btnRef,className:\"dark-mode-btn\",onClick:toggleDarkMod,children:[/*#__PURE__*/_jsx(\"img\",{src:sun,alt:\"Light mode\",className:\"dark-mode-btn__icon\"}),/*#__PURE__*/_jsx(\"img\",{src:moon,alt:\"Dark mode\",className:\"dark-mode-btn__icon\"})]});};export default BtnDarkMod;","map":{"version":3,"names":["useEffect","useRef","useLocalStorage","detectDarkMode","sun","moon","jsx","_jsx","jsxs","_jsxs","BtnDarkMod","darkMode","setDarkMode","btnRef","document","body","classList","add","current","remove","window","matchMedia","addEventListener","event","newColorScheme","matches","toggleDarkMod","ref","className","onClick","children","src","alt"],"sources":["D:/1react_project/react_projs/dep_portfolio/dep_profile/src/components/btnDarkMod/BtnDarkMod.js"],"sourcesContent":["import { useEffect, useRef } from \"react\";\r\n\r\nimport { useLocalStorage } from \"../../utils/useLocalStorage\";\r\n\r\nimport detectDarkMode from \"../../utils/detectDarkMode\";\r\nimport sun from \"../../img/icons/sun.svg\";\r\nimport moon from \"../../img/icons/moon.svg\";\r\nimport \"./style.css\"\r\n\r\n\r\nconst BtnDarkMod = () => {\r\n\r\n    const [darkMode, setDarkMode] = useLocalStorage('darkMode', detectDarkMode());\r\n\r\n    const btnRef = useRef (null);\r\n\r\n    useEffect(() => {\r\n        if (darkMode === \"dark\") {\r\n            document.body.classList.add('dark');\r\n            btnRef.current.classList.add('dark-mode-btn--active');\r\n        } else {\r\n            document.body.classList.remove('dark');\r\n            btnRef.current.classList.remove('dark-mode-btn--active');\r\n        }\r\n    }, [darkMode])\r\n\r\n    useEffect(() => {\r\n        window\r\n            .matchMedia(\"(prefers-color-scheme: dark)\")\r\n            .addEventListener(\"change\", (event) => {\r\n                const newColorScheme = event.matches ? \"dark\" : \"light\";\r\n                setDarkMode(newColorScheme);\r\n            });\r\n    }, [setDarkMode])\r\n\r\n    const toggleDarkMod = () => {\r\n        setDarkMode((current) => {\r\n            return current === \"light\" ? \"dark\" : \"light\";\r\n        });\r\n    }\r\n\r\n    return ( \r\n        <button ref={btnRef} className=\"dark-mode-btn\" onClick={toggleDarkMod}>\r\n            <img src={sun} alt=\"Light mode\" className=\"dark-mode-btn__icon\" />\r\n            <img src={moon} alt=\"Dark mode\" className=\"dark-mode-btn__icon\" />\r\n        </button>\r\n     );\r\n}\r\n \r\nexport default BtnDarkMod;"],"mappings":"AAAA,OAASA,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAEzC,OAASC,eAAe,KAAQ,6BAA6B,CAE7D,MAAO,CAAAC,cAAc,KAAM,4BAA4B,CACvD,MAAO,CAAAC,GAAG,KAAM,yBAAyB,CACzC,MAAO,CAAAC,IAAI,KAAM,0BAA0B,CAC3C,MAAO,aAAa,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAGpB,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CAErB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGV,eAAe,CAAC,UAAU,CAAEC,cAAc,CAAC,CAAC,CAAC,CAE7E,KAAM,CAAAU,MAAM,CAAGZ,MAAM,CAAE,IAAI,CAAC,CAE5BD,SAAS,CAAC,IAAM,CACZ,GAAIW,QAAQ,GAAK,MAAM,CAAE,CACrBG,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC,CACnCJ,MAAM,CAACK,OAAO,CAACF,SAAS,CAACC,GAAG,CAAC,uBAAuB,CAAC,CACzD,CAAC,IAAM,CACHH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACG,MAAM,CAAC,MAAM,CAAC,CACtCN,MAAM,CAACK,OAAO,CAACF,SAAS,CAACG,MAAM,CAAC,uBAAuB,CAAC,CAC5D,CACJ,CAAC,CAAE,CAACR,QAAQ,CAAC,CAAC,CAEdX,SAAS,CAAC,IAAM,CACZoB,MAAM,CACDC,UAAU,CAAC,8BAA8B,CAAC,CAC1CC,gBAAgB,CAAC,QAAQ,CAAGC,KAAK,EAAK,CACnC,KAAM,CAAAC,cAAc,CAAGD,KAAK,CAACE,OAAO,CAAG,MAAM,CAAG,OAAO,CACvDb,WAAW,CAACY,cAAc,CAAC,CAC/B,CAAC,CAAC,CACV,CAAC,CAAE,CAACZ,WAAW,CAAC,CAAC,CAEjB,KAAM,CAAAc,aAAa,CAAGA,CAAA,GAAM,CACxBd,WAAW,CAAEM,OAAO,EAAK,CACrB,MAAO,CAAAA,OAAO,GAAK,OAAO,CAAG,MAAM,CAAG,OAAO,CACjD,CAAC,CAAC,CACN,CAAC,CAED,mBACIT,KAAA,WAAQkB,GAAG,CAAEd,MAAO,CAACe,SAAS,CAAC,eAAe,CAACC,OAAO,CAAEH,aAAc,CAAAI,QAAA,eAClEvB,IAAA,QAAKwB,GAAG,CAAE3B,GAAI,CAAC4B,GAAG,CAAC,YAAY,CAACJ,SAAS,CAAC,qBAAqB,CAAE,CAAC,cAClErB,IAAA,QAAKwB,GAAG,CAAE1B,IAAK,CAAC2B,GAAG,CAAC,WAAW,CAACJ,SAAS,CAAC,qBAAqB,CAAE,CAAC,EAC9D,CAAC,CAEjB,CAAC,CAED,cAAe,CAAAlB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}